// 该文件自动生成，请勿修改(除非知道自己在做什么)
/* eslint-disable */
import axios from '../axios';
import config from './config';
export default {
  getBizParamsList: (req, options = {}) => axios({ ...config.getBizParamsList, data: req, ...options }),
  postBizParamsUpdate: (req, options = {}) => axios({ ...config.postBizParamsUpdate, data: req, ...options }),
  postClassifyDelete: (req, options = {}) => axios({ ...config.postClassifyDelete, data: req, ...options }),
  getClassifyList: (req, options = {}) => axios({ ...config.getClassifyList, data: req, ...options }),
  postClassifySave: (req, options = {}) => axios({ ...config.postClassifySave, data: req, ...options }),
  postClassifyUpdate: (req, options = {}) => axios({ ...config.postClassifyUpdate, data: req, ...options }),
  getClassifyPageExpertDetail: (req, options = {}) => axios({ ...config.getClassifyPageExpertDetail, data: req, ...options }),
  getClassifyPageOfficialServiceDetail: (req, options = {}) => axios({ ...config.getClassifyPageOfficialServiceDetail, data: req, ...options }),
  getBrandList: (req, options = {}) => axios({ ...config.getBrandList, data: req, ...options }),
  getCommonLocationList: (req, options = {}) => axios({ ...config.getCommonLocationList, data: req, ...options }),
  getCommonQueryAreaList: (req, options = {}) => axios({ ...config.getCommonQueryAreaList, data: req, ...options }),
  getCommonGroupList: (req, options = {}) => axios({ ...config.getCommonGroupList, data: req, ...options }),
  getCommonOptions: (req, options = {}) => axios({ ...config.getCommonOptions, data: req, ...options }),
  getCommonReloadCache: (req, options = {}) => axios({ ...config.getCommonReloadCache, data: req, ...options }),
  postCommonSaveImage: (req, options = {}) => axios({ ...config.postCommonSaveImage, data: req, ...options }),
  getConsultEntranceDetail: (req, options = {}) => axios({ ...config.getConsultEntranceDetail, data: req, ...options }),
  getConsultEntranceQuery: (req, options = {}) => axios({ ...config.getConsultEntranceQuery, data: req, ...options }),
  postConsultEntranceSave: (req, options = {}) => axios({ ...config.postConsultEntranceSave, data: req, ...options }),
  postConsultEntranceUpdate: (req, options = {}) => axios({ ...config.postConsultEntranceUpdate, data: req, ...options }),
  postConsultEntranceUpdateStatus: (req, options = {}) => axios({ ...config.postConsultEntranceUpdateStatus, data: req, ...options }),
  postExpertDel: (req, options = {}) => axios({ ...config.postExpertDel, data: req, ...options }),
  getExpertDetail: (req, options = {}) => axios({ ...config.getExpertDetail, data: req, ...options }),
  postExpertEdit: (req, options = {}) => axios({ ...config.postExpertEdit, data: req, ...options }),
  postExpertSave: (req, options = {}) => axios({ ...config.postExpertSave, data: req, ...options }),
  getExpertList: (req, options = {}) => axios({ ...config.getExpertList, data: req, ...options }),
  postExpertServiceAudit: (req, options = {}) => axios({ ...config.postExpertServiceAudit, data: req, ...options }),
  postExpertServiceBatchDelete: (req, options = {}) => axios({ ...config.postExpertServiceBatchDelete, data: req, ...options }),
  postExpertServiceBatchUpdatePriority: (req, options = {}) => axios({ ...config.postExpertServiceBatchUpdatePriority, data: req, ...options }),
  getExpertServiceDetail: (req, options = {}) => axios({ ...config.getExpertServiceDetail, data: req, ...options }),
  getExpertServiceList: (req, options = {}) => axios({ ...config.getExpertServiceList, data: req, ...options }),
  getExpertServiceListForPriority: (req, options = {}) => axios({ ...config.getExpertServiceListForPriority, data: req, ...options }),
  postExpertServiceSave: (req, options = {}) => axios({ ...config.postExpertServiceSave, data: req, ...options }),
  postExpertServiceUpdate: (req, options = {}) => axios({ ...config.postExpertServiceUpdate, data: req, ...options }),
  getGuidePageGetById: (req, options = {}) => axios({ ...config.getGuidePageGetById, data: req, ...options }),
  getGuidePageListByPage: (req, options = {}) => axios({ ...config.getGuidePageListByPage, data: req, ...options }),
  postGuidePageRemove: (req, options = {}) => axios({ ...config.postGuidePageRemove, data: req, ...options }),
  postGuidePageSave: (req, options = {}) => axios({ ...config.postGuidePageSave, data: req, ...options }),
  postGuidePageUpdate: (req, options = {}) => axios({ ...config.postGuidePageUpdate, data: req, ...options }),
  getHomeDetail: (req, options = {}) => axios({ ...config.getHomeDetail, data: req, ...options }),
  postManualDelete: (req, options = {}) => axios({ ...config.postManualDelete, data: req, ...options }),
  postManualInsert: (req, options = {}) => axios({ ...config.postManualInsert, data: req, ...options }),
  getManualList: (req, options = {}) => axios({ ...config.getManualList, data: req, ...options }),
  postManualUpdate: (req, options = {}) => axios({ ...config.postManualUpdate, data: req, ...options }),
  postRobotDelete: (req, options = {}) => axios({ ...config.postRobotDelete, data: req, ...options }),
  postRobotInsert: (req, options = {}) => axios({ ...config.postRobotInsert, data: req, ...options }),
  getRobotList: (req, options = {}) => axios({ ...config.getRobotList, data: req, ...options }),
  postRobotUpdate: (req, options = {}) => axios({ ...config.postRobotUpdate, data: req, ...options }),
  getLandingPageDetail: (req, options = {}) => axios({ ...config.getLandingPageDetail, data: req, ...options }),
  getLandingPageExpertDetail: (req, options = {}) => axios({ ...config.getLandingPageExpertDetail, data: req, ...options }),
  getLandingPageOfficialServiceDetail: (req, options = {}) => axios({ ...config.getLandingPageOfficialServiceDetail, data: req, ...options }),
  getLandingPageQuery: (req, options = {}) => axios({ ...config.getLandingPageQuery, data: req, ...options }),
  postLandingPageSave: (req, options = {}) => axios({ ...config.postLandingPageSave, data: req, ...options }),
  getLandingPageSimpleList: (req, options = {}) => axios({ ...config.getLandingPageSimpleList, data: req, ...options }),
  postLandingPageUpdate: (req, options = {}) => axios({ ...config.postLandingPageUpdate, data: req, ...options }),
  postOfficialServiceBatchDelete: (req, options = {}) => axios({ ...config.postOfficialServiceBatchDelete, data: req, ...options }),
  getOfficialServiceDetail: (req, options = {}) => axios({ ...config.getOfficialServiceDetail, data: req, ...options }),
  getOfficialServiceList: (req, options = {}) => axios({ ...config.getOfficialServiceList, data: req, ...options }),
  postOfficialServiceSave: (req, options = {}) => axios({ ...config.postOfficialServiceSave, data: req, ...options }),
  postOfficialServiceUpdate: (req, options = {}) => axios({ ...config.postOfficialServiceUpdate, data: req, ...options }),
  getLogExport: (req, options = {}) => axios({ ...config.getLogExport, data: req, ...options }),
  getRobotWdList: (req, options = {}) => axios({ ...config.getRobotWdList, data: req, ...options }),
  getLogList: (req, options = {}) => axios({ ...config.getLogList, data: req, ...options }),
  getRobotQuestionDetail: (req, options = {}) => axios({ ...config.getRobotQuestionDetail, data: req, ...options }),
  getRobotQuestionList: (req, options = {}) => axios({ ...config.getRobotQuestionList, data: req, ...options }),
  postPolicyDelete: (req, options = {}) => axios({ ...config.postPolicyDelete, data: req, ...options }),
  getPolicyList: (req, options = {}) => axios({ ...config.getPolicyList, data: req, ...options }),
  getPolicyDetail: (req, options = {}) => axios({ ...config.getPolicyDetail, data: req, ...options }),
  postPolicySave: (req, options = {}) => axios({ ...config.postPolicySave, data: req, ...options }),
  postPolicyUpdate: (req, options = {}) => axios({ ...config.postPolicyUpdate, data: req, ...options }),
  getRouteRuleChatTipDetail: (req, options = {}) => axios({ ...config.getRouteRuleChatTipDetail, data: req, ...options }),
  postRuleDelete: (req, options = {}) => axios({ ...config.postRuleDelete, data: req, ...options }),
  getRuleDetail: (req, options = {}) => axios({ ...config.getRuleDetail, data: req, ...options }),
  getRouteRuleFeedbackDetail: (req, options = {}) => axios({ ...config.getRouteRuleFeedbackDetail, data: req, ...options }),
  getRouteRuleInteractDetail: (req, options = {}) => axios({ ...config.getRouteRuleInteractDetail, data: req, ...options }),
  getRuleList: (req, options = {}) => axios({ ...config.getRuleList, data: req, ...options }),
  postRuleSave: (req, options = {}) => axios({ ...config.postRuleSave, data: req, ...options }),
  postRouteRuleChatTipSave: (req, options = {}) => axios({ ...config.postRouteRuleChatTipSave, data: req, ...options }),
  postRouteRuleFeedbackSave: (req, options = {}) => axios({ ...config.postRouteRuleFeedbackSave, data: req, ...options }),
  postRouteRuleInteractSave: (req, options = {}) => axios({ ...config.postRouteRuleInteractSave, data: req, ...options }),
  postWindowSave: (req, options = {}) => axios({ ...config.postWindowSave, data: req, ...options }),
  postRuleSort: (req, options = {}) => axios({ ...config.postRuleSort, data: req, ...options }),
  postRuleUpdate: (req, options = {}) => axios({ ...config.postRuleUpdate, data: req, ...options }),
  getRouteRuleWindowDetail: (req, options = {}) => axios({ ...config.getRouteRuleWindowDetail, data: req, ...options }),
  getChatTipDetail: (req, options = {}) => axios({ ...config.getChatTipDetail, data: req, ...options }),
  getFeedbackDetail: (req, options = {}) => axios({ ...config.getFeedbackDetail, data: req, ...options }),
  postFeedbackSave: (req, options = {}) => axios({ ...config.postFeedbackSave, data: req, ...options }),
  getInteractDetail: (req, options = {}) => axios({ ...config.getInteractDetail, data: req, ...options }),
  postInteractSave: (req, options = {}) => axios({ ...config.postInteractSave, data: req, ...options }),
  postChatTipSave: (req, options = {}) => axios({ ...config.postChatTipSave, data: req, ...options }),
  getWindowDetail: (req, options = {}) => axios({ ...config.getWindowDetail, data: req, ...options }),
  postRouteRuleGlobalWindowSave: (req, options = {}) => axios({ ...config.postRouteRuleGlobalWindowSave, data: req, ...options }),
  postSliderImageDelete: (req, options = {}) => axios({ ...config.postSliderImageDelete, data: req, ...options }),
  getSliderImageGet: (req, options = {}) => axios({ ...config.getSliderImageGet, data: req, ...options }),
  postSliderImageSave: (req, options = {}) => axios({ ...config.postSliderImageSave, data: req, ...options }),
  getSliderImageSearch: (req, options = {}) => axios({ ...config.getSliderImageSearch, data: req, ...options }),
  postSliderImageUpdate: (req, options = {}) => axios({ ...config.postSliderImageUpdate, data: req, ...options }),
  getStatsFeedback: (req, options = {}) => axios({ ...config.getStatsFeedback, data: req, ...options }),
  postLandingPageClone: (req, options = {}) => axios({ ...config.postLandingPageClone, data: req, ...options }),
  getForbidList: (req, options = {}) => axios({ ...config.getForbidList, data: req, ...options }),
  postForbidInsert: (req, options = {}) => axios({ ...config.postForbidInsert, data: req, ...options }),
  postForbidUpdate: (req, options = {}) => axios({ ...config.postForbidUpdate, data: req, ...options }),
  postForbidStatus: (req, options = {}) => axios({ ...config.postForbidStatus, data: req, ...options }),
  postToolConsultUrl: (req, options = {}) => axios({ ...config.postToolConsultUrl, data: req, ...options }),
  getCommonOrgList: (req, options = {}) => axios({ ...config.getCommonOrgList, data: req, ...options }),
  getUserCurrent: (req, options = {}) => axios({ ...config.getUserCurrent, data: req, ...options }),
  getUserFuzzy: (req, options = {}) => axios({ ...config.getUserFuzzy, data: req, ...options }),
  postSpecialConsultBatchDelete: (req, options = {}) => axios({ ...config.postSpecialConsultBatchDelete, data: req, ...options }),
  getSpecialConsultDetail: (req, options = {}) => axios({ ...config.getSpecialConsultDetail, data: req, ...options }),
  getSpecialConsultList: (req, options = {}) => axios({ ...config.getSpecialConsultList, data: req, ...options }),
  postSpecialConsultSave: (req, options = {}) => axios({ ...config.postSpecialConsultSave, data: req, ...options }),
  postSpecialConsultUpdate: (req, options = {}) => axios({ ...config.postSpecialConsultUpdate, data: req, ...options }),
  postSpecialLocationDelete: (req, options = {}) => axios({ ...config.postSpecialLocationDelete, data: req, ...options }),
  getSpecialLocationDetail: (req, options = {}) => axios({ ...config.getSpecialLocationDetail, data: req, ...options }),
  getSpecialLocationList: (req, options = {}) => axios({ ...config.getSpecialLocationList, data: req, ...options }),
  postSpecialLocationSave: (req, options = {}) => axios({ ...config.postSpecialLocationSave, data: req, ...options }),
  postSpecialLocationUpdate: (req, options = {}) => axios({ ...config.postSpecialLocationUpdate, data: req, ...options }),
  getModuleList: (req, options = {}) => axios({ ...config.getModuleList, data: req, ...options }),
  getSystemList: (req, options = {}) => axios({ ...config.getSystemList, data: req, ...options }),
  postModuleSave: (req, options = {}) => axios({ ...config.postModuleSave, data: req, ...options }),
  postSystemSave: (req, options = {}) => axios({ ...config.postSystemSave, data: req, ...options }),
  postModuleUpdate: (req, options = {}) => axios({ ...config.postModuleUpdate, data: req, ...options }),
  postModuleDelete: (req, options = {}) => axios({ ...config.postModuleDelete, data: req, ...options }),
  postSystemUpdate: (req, options = {}) => axios({ ...config.postSystemUpdate, data: req, ...options }),
  postSystemDelete: (req, options = {}) => axios({ ...config.postSystemDelete, data: req, ...options }),
  postLocationCopy: (req, options = {}) => axios({ ...config.postLocationCopy, data: req, ...options }),
  postButtonDelete: (req, options = {}) => axios({ ...config.postButtonDelete, data: req, ...options }),
  postLocationDelete: (req, options = {}) => axios({ ...config.postLocationDelete, data: req, ...options }),
  getButtonDetail: (req, options = {}) => axios({ ...config.getButtonDetail, data: req, ...options }),
  getButtonList: (req, options = {}) => axios({ ...config.getButtonList, data: req, ...options }),
  getLocationDetail: (req, options = {}) => axios({ ...config.getLocationDetail, data: req, ...options }),
  getLocationList: (req, options = {}) => axios({ ...config.getLocationList, data: req, ...options }),
  getModuleDetail: (req, options = {}) => axios({ ...config.getModuleDetail, data: req, ...options }),
  getSystemDetail: (req, options = {}) => axios({ ...config.getSystemDetail, data: req, ...options }),
  postButtonSave: (req, options = {}) => axios({ ...config.postButtonSave, data: req, ...options }),
  postLocationSave: (req, options = {}) => axios({ ...config.postLocationSave, data: req, ...options }),
  postButtonUpdate: (req, options = {}) => axios({ ...config.postButtonUpdate, data: req, ...options }),
  postLocationUpdate: (req, options = {}) => axios({ ...config.postLocationUpdate, data: req, ...options }),
  getCommonQueryTag: (req, options = {}) => axios({ ...config.getCommonQueryTag, data: req, ...options }),
  postPriorityDelete: (req, options = {}) => axios({ ...config.postPriorityDelete, data: req, ...options }),
  getPriorityDetail: (req, options = {}) => axios({ ...config.getPriorityDetail, data: req, ...options }),
  getPriorityList: (req, options = {}) => axios({ ...config.getPriorityList, data: req, ...options }),
  postPrioritySave: (req, options = {}) => axios({ ...config.postPrioritySave, data: req, ...options }),
  postPriorityUpdate: (req, options = {}) => axios({ ...config.postPriorityUpdate, data: req, ...options }),
  getConfigDetail: (req, options = {}) => axios({ ...config.getConfigDetail, data: req, ...options }),
  postConfigSave: (req, options = {}) => axios({ ...config.postConfigSave, data: req, ...options }),
  getCommonOrgTree: (req, options = {}) => axios({ ...config.getCommonOrgTree, data: req, ...options }),
  postChannelDelete: (req, options = {}) => axios({ ...config.postChannelDelete, data: req, ...options }),
  getChannelDetail: (req, options = {}) => axios({ ...config.getChannelDetail, data: req, ...options }),
  getChannelList: (req, options = {}) => axios({ ...config.getChannelList, data: req, ...options }),
  postChannelSave: (req, options = {}) => axios({ ...config.postChannelSave, data: req, ...options }),
  postChannelUpdate: (req, options = {}) => axios({ ...config.postChannelUpdate, data: req, ...options }),
  getPromotionchannelDetail: (req, options = {}) => axios({ ...config.getPromotionchannelDetail, data: req, ...options }),
  postPromotionchannelUpdate: (req, options = {}) => axios({ ...config.postPromotionchannelUpdate, data: req, ...options }),
  postPromotionchannelSave: (req, options = {}) => axios({ ...config.postPromotionchannelSave, data: req, ...options }),
  postPromotionchannelDelete: (req, options = {}) => axios({ ...config.postPromotionchannelDelete, data: req, ...options }),
  getPromotionchannelList: (req, options = {}) => axios({ ...config.getPromotionchannelList, data: req, ...options }),
  postModuleCopy: (req, options = {}) => axios({ ...config.postModuleCopy, data: req, ...options }),
  getCommonTest: (req, options = {}) => axios({ ...config.getCommonTest, data: req, ...options }),
  getChannelExport: (req, options = {}) => axios({ ...config.getChannelExport, data: req, ...options }),
  getAuditList: (req, options = {}) => axios({ ...config.getAuditList, data: req, ...options }),
  postReplyAudit: (req, options = {}) => axios({ ...config.postReplyAudit, data: req, ...options }),
  postReplyDelete: (req, options = {}) => axios({ ...config.postReplyDelete, data: req, ...options }),
  getQuestionReply: (req, options = {}) => axios({ ...config.getQuestionReply, data: req, ...options }),
  getQuestionList: (req, options = {}) => axios({ ...config.getQuestionList, data: req, ...options }),
  postReplySave: (req, options = {}) => axios({ ...config.postReplySave, data: req, ...options }),
  postRecommendUpdate: (req, options = {}) => axios({ ...config.postRecommendUpdate, data: req, ...options }),
  postReplyUpdate: (req, options = {}) => axios({ ...config.postReplyUpdate, data: req, ...options }),
  getTagTree: (req, options = {}) => axios({ ...config.getTagTree, data: req, ...options }),
  getQuestionDetail: (req, options = {}) => axios({ ...config.getQuestionDetail, data: req, ...options }),
  postEmpowerlevelDelete: (req, options = {}) => axios({ ...config.postEmpowerlevelDelete, data: req, ...options }),
  getEmpowerlevelDetail: (req, options = {}) => axios({ ...config.getEmpowerlevelDetail, data: req, ...options }),
  getEmpowerlevelList: (req, options = {}) => axios({ ...config.getEmpowerlevelList, data: req, ...options }),
  postEmpowerlevelSave: (req, options = {}) => axios({ ...config.postEmpowerlevelSave, data: req, ...options }),
  postEmpowerlevelUpdate: (req, options = {}) => axios({ ...config.postEmpowerlevelUpdate, data: req, ...options }),
  postUsertypeDelete: (req, options = {}) => axios({ ...config.postUsertypeDelete, data: req, ...options }),
  getUsertypeDetail: (req, options = {}) => axios({ ...config.getUsertypeDetail, data: req, ...options }),
  getUsertypeList: (req, options = {}) => axios({ ...config.getUsertypeList, data: req, ...options }),
  postUsertypeSave: (req, options = {}) => axios({ ...config.postUsertypeSave, data: req, ...options }),
  postUsertypeUpdate: (req, options = {}) => axios({ ...config.postUsertypeUpdate, data: req, ...options }),
  postUploadFile: (req, options = {}) => axios({ ...config.postUploadFile, data: req, ...options }),
  getRecordList: (req, options = {}) => axios({ ...config.getRecordList, data: req, ...options }),
  getToolQueryLogList: (req, options = {}) => axios({ ...config.getToolQueryLogList, data: req, ...options }),
  getCustomerList: (req, options = {}) => axios({ ...config.getCustomerList, data: req, ...options }),
  getProductdimensionList: (req, options = {}) => axios({ ...config.getProductdimensionList, data: req, ...options }),
  postProductdimensionUpdate: (req, options = {}) => axios({ ...config.postProductdimensionUpdate, data: req, ...options }),
  getBrandListWalle: (req, options = {}) => axios({ ...config.getBrandListWalle, data: req, ...options }),
  postBrandUpdate: (req, options = {}) => axios({ ...config.postBrandUpdate, data: req, ...options }),
  getBrandtypeList: (req, options = {}) => axios({ ...config.getBrandtypeList, data: req, ...options }),
  postBrandtypeSave: (req, options = {}) => axios({ ...config.postBrandtypeSave, data: req, ...options }),
  postBrandtypeUpdate: (req, options = {}) => axios({ ...config.postBrandtypeUpdate, data: req, ...options }),
  postBusinesstypeDelete: (req, options = {}) => axios({ ...config.postBusinesstypeDelete, data: req, ...options }),
  getBusinesstypeList: (req, options = {}) => axios({ ...config.getBusinesstypeList, data: req, ...options }),
  getBusinesstypeSave: (req, options = {}) => axios({ ...config.getBusinesstypeSave, data: req, ...options }),
  postBrandtypeDelete: (req, options = {}) => axios({ ...config.postBrandtypeDelete, data: req, ...options }),
  getActionList: (req, options = {}) => axios({ ...config.getActionList, data: req, ...options }),
  postActionSave: (req, options = {}) => axios({ ...config.postActionSave, data: req, ...options }),
  postActionUpdate: (req, options = {}) => axios({ ...config.postActionUpdate, data: req, ...options }),
  postActionDelete: (req, options = {}) => axios({ ...config.postActionDelete, data: req, ...options }),
  getActionMatterList: (req, options = {}) => axios({ ...config.getActionMatterList, data: req, ...options }),
  getRightDeductQuery: (req, options = {}) => axios({ ...config.getRightDeductQuery, data: req, ...options }),
  getRightDeductDetail: (req, options = {}) => axios({ ...config.getRightDeductDetail, data: req, ...options }),
  getDataList: (req, options = {}) => axios({ ...config.getDataList, data: req, ...options }),
  getVoteDownDetail: (req, options = {}) => axios({ ...config.getVoteDownDetail, data: req, ...options }),
  getQueueabandonLogExport: (req, options = {}) => axios({ ...config.getQueueabandonLogExport, data: req, ...options }),
  getQueueabandonLogList: (req, options = {}) => axios({ ...config.getQueueabandonLogList, data: req, ...options }),
  getActionOption: (req, options = {}) => axios({ ...config.getActionOption, data: req, ...options }),
  getPersonaConsultList: (req, options = {}) => axios({ ...config.getPersonaConsultList, data: req, ...options }),
  getPersonaList: (req, options = {}) => axios({ ...config.getPersonaList, data: req, ...options }),
  getPersonaDetail: (req, options = {}) => axios({ ...config.getPersonaDetail, data: req, ...options }),
  getConsultLastTagStatistics: (req, options = {}) => axios({ ...config.getConsultLastTagStatistics, data: req, ...options }),
  getConsultLocationStatistics: (req, options = {}) => axios({ ...config.getConsultLocationStatistics, data: req, ...options }),
  getConsultMonthStatistics: (req, options = {}) => axios({ ...config.getConsultMonthStatistics, data: req, ...options }),
  getConsultTagStatistics: (req, options = {}) => axios({ ...config.getConsultTagStatistics, data: req, ...options }),
  getPersonaTagStatistics: (req, options = {}) => axios({ ...config.getPersonaTagStatistics, data: req, ...options }),
  getConsultGetYearTag: (req, options = {}) => axios({ ...config.getConsultGetYearTag, data: req, ...options }),
  getExpertScheduleDetail: (req, options = {}) => axios({ ...config.getExpertScheduleDetail, data: req, ...options }),
  postExpertScheduleImport: (req, options = {}) => axios({ ...config.postExpertScheduleImport, data: req, ...options }),
  getExpertScheduleListByPage: (req, options = {}) => axios({ ...config.getExpertScheduleListByPage, data: req, ...options }),
  getV2GetById: (req, options = {}) => axios({ ...config.getV2GetById, data: req, ...options }),
  postV2Save: (req, options = {}) => axios({ ...config.postV2Save, data: req, ...options }),
  postV2Update: (req, options = {}) => axios({ ...config.postV2Update, data: req, ...options }),
  getExpertInquiryRecordList: (req, options = {}) => axios({ ...config.getExpertInquiryRecordList, data: req, ...options }),
  postExpertInquiryRecordComplete: (req, options = {}) => axios({ ...config.postExpertInquiryRecordComplete, data: req, ...options }),
  postExpertInquiryRecordUpdateRecordContent: (req, options = {}) => axios({ ...config.postExpertInquiryRecordUpdateRecordContent, data: req, ...options }),
  postCommonQueryClueRecord: (req, options = {}) => axios({ ...config.postCommonQueryClueRecord, data: req, ...options }),
  postCommonSaveClueRecord: (req, options = {}) => axios({ ...config.postCommonSaveClueRecord, data: req, ...options }),
  getCommonQueryClueRecord: (req, options = {}) => axios({ ...config.getCommonQueryClueRecord, data: req, ...options }),
  postExpertScheduleDetail: (req, options = {}) => axios({ ...config.postExpertScheduleDetail, data: req, ...options }),
  postExpertScheduleListByPage: (req, options = {}) => axios({ ...config.postExpertScheduleListByPage, data: req, ...options }),
  postExpertInquiryRecordDealInquiryRecord: (req, options = {}) => axios({ ...config.postExpertInquiryRecordDealInquiryRecord, data: req, ...options }),
  getExpertInquiryRecordListPage: (req, options = {}) => axios({ ...config.getExpertInquiryRecordListPage, data: req, ...options }),
  getClueQueryClueRecord: (req, options = {}) => axios({ ...config.getClueQueryClueRecord, data: req, ...options }),
  postClueSaveClueRecord: (req, options = {}) => axios({ ...config.postClueSaveClueRecord, data: req, ...options }),
  getCommonDictValid: (req, options = {}) => axios({ ...config.getCommonDictValid, data: req, ...options }),
  getCustomerFuzzyQueryCompany: (req, options = {}) => axios({ ...config.getCustomerFuzzyQueryCompany, data: req, ...options }),
  getExpertInquiryRecordExport: (req, options = {}) => axios({ ...config.getExpertInquiryRecordExport, data: req, ...options }),
  getExpertInquiryRecordExpertList: (req, options = {}) => axios({ ...config.getExpertInquiryRecordExpertList, data: req, ...options }),
  getExpertInquiryRecordQueryExpertScheduleList: (req, options = {}) => axios({ ...config.getExpertInquiryRecordQueryExpertScheduleList, data: req, ...options }),
  postExpertInquiryRecordSaveInquiryRecord: (req, options = {}) => axios({ ...config.postExpertInquiryRecordSaveInquiryRecord, data: req, ...options }),
  postExpertScheduleDeleteInquirySchedule: (req, options = {}) => axios({ ...config.postExpertScheduleDeleteInquirySchedule, data: req, ...options }),
  getExpertScheduleQueryScheduleList: (req, options = {}) => axios({ ...config.getExpertScheduleQueryScheduleList, data: req, ...options }),
  getExpertScheduleQueryScheduleStatusList: (req, options = {}) => axios({ ...config.getExpertScheduleQueryScheduleStatusList, data: req, ...options }),
  postExpertScheduleSaveInquirySchedule: (req, options = {}) => axios({ ...config.postExpertScheduleSaveInquirySchedule, data: req, ...options }),
  getProductPackageList: (req, options = {}) => axios({ ...config.getProductPackageList, data: req, ...options }),
  getProductPackageDetail: (req, options = {}) => axios({ ...config.getProductPackageDetail, data: req, ...options }),
  postProductPackageOnShelf: (req, options = {}) => axios({ ...config.postProductPackageOnShelf, data: req, ...options }),
  postProductPackageSave: (req, options = {}) => axios({ ...config.postProductPackageSave, data: req, ...options }),
  postProductPackageUpdate: (req, options = {}) => axios({ ...config.postProductPackageUpdate, data: req, ...options }),
  getExpertScheduleQueryExpertScheduleList: (req, options = {}) => axios({ ...config.getExpertScheduleQueryExpertScheduleList, data: req, ...options }),
  getRightQueryCompanyRight: (req, options = {}) => axios({ ...config.getRightQueryCompanyRight, data: req, ...options }),
  getExpertScheduleGetScheduleByCodeList: (req, options = {}) => axios({ ...config.getExpertScheduleGetScheduleByCodeList, data: req, ...options }),
  getExpertPoolDetail: (req, options = {}) => axios({ ...config.getExpertPoolDetail, data: req, ...options }),
  getExpertPoolQuery: (req, options = {}) => axios({ ...config.getExpertPoolQuery, data: req, ...options }),
  postExpertPoolSave: (req, options = {}) => axios({ ...config.postExpertPoolSave, data: req, ...options }),
  postExpertPoolUpdate: (req, options = {}) => axios({ ...config.postExpertPoolUpdate, data: req, ...options }),
  getConfigQuery: (req, options = {}) => axios({ ...config.getConfigQuery, data: req, ...options }),
  postExpertPoolUpdateStatus: (req, options = {}) => axios({ ...config.postExpertPoolUpdateStatus, data: req, ...options }),
  getExpertPoolConfigQuery: (req, options = {}) => axios({ ...config.getExpertPoolConfigQuery, data: req, ...options }),
  getExpertInquiryImportList: (req, options = {}) => axios({ ...config.getExpertInquiryImportList, data: req, ...options }),
  getExpertInquiryImportGetImportTemplateUrl: (req, options = {}) => axios({ ...config.getExpertInquiryImportGetImportTemplateUrl, data: req, ...options }),
  postExpertInquiryImportBatchDeductRecord: (req, options = {}) => axios({ ...config.postExpertInquiryImportBatchDeductRecord, data: req, ...options }),
  postExpertInquiryImportNotDeductRecord: (req, options = {}) => axios({ ...config.postExpertInquiryImportNotDeductRecord, data: req, ...options }),
  postExpertInquiryImportImport: (req, options = {}) => axios({ ...config.postExpertInquiryImportImport, data: req, ...options }),
  getCommonProperty: (req, options = {}) => axios({ ...config.getCommonProperty, data: req, ...options }),
  postExpertInquiryRecordUpdateCancelReason: (req, options = {}) => axios({ ...config.postExpertInquiryRecordUpdateCancelReason, data: req, ...options }),
  postMarketActivityDelete: (req, options = {}) => axios({ ...config.postMarketActivityDelete, data: req, ...options }),
  getMarketActivityList: (req, options = {}) => axios({ ...config.getMarketActivityList, data: req, ...options }),
  postMarketActivityOnShelf: (req, options = {}) => axios({ ...config.postMarketActivityOnShelf, data: req, ...options }),
  getMarketActivityLogList: (req, options = {}) => axios({ ...config.getMarketActivityLogList, data: req, ...options }),
  postMarketActivitySave: (req, options = {}) => axios({ ...config.postMarketActivitySave, data: req, ...options }),
  getTest: (req, options = {}) => axios({ ...config.getTest, data: req, ...options }),
  getGroupInfoList: (req, options = {}) => axios({ ...config.getGroupInfoList, data: req, ...options }),
  getTestUploadFile: (req, options = {}) => axios({ ...config.getTestUploadFile, data: req, ...options }),
  postServiceConfigSave: (req, options = {}) => axios({ ...config.postServiceConfigSave, data: req, ...options }),
  postServiceConfigUpdate: (req, options = {}) => axios({ ...config.postServiceConfigUpdate, data: req, ...options }),
  postServiceConfigDisable: (req, options = {}) => axios({ ...config.postServiceConfigDisable, data: req, ...options }),
  getServiceConfigQuery: (req, options = {}) => axios({ ...config.getServiceConfigQuery, data: req, ...options }),
  getServiceConfigQueryScheduleStatusList: (req, options = {}) => axios({ ...config.getServiceConfigQueryScheduleStatusList, data: req, ...options }),
  postAdd: (req, options = {}) => axios({ ...config.postAdd, data: req, ...options }),
  postDelete: (req, options = {}) => axios({ ...config.postDelete, data: req, ...options }),
  postUpdate: (req, options = {}) => axios({ ...config.postUpdate, data: req, ...options }),
  getDetail: (req, options = {}) => axios({ ...config.getDetail, data: req, ...options }),
  getListByPage: (req, options = {}) => axios({ ...config.getListByPage, data: req, ...options }),
  getTestGetLoginUser: (req, options = {}) => axios({ ...config.getTestGetLoginUser, data: req, ...options }),
  getTestListByUserId: (req, options = {}) => axios({ ...config.getTestListByUserId, data: req, ...options }),
  postServiceTimeBatchUpdate: (req, options = {}) => axios({ ...config.postServiceTimeBatchUpdate, data: req, ...options }),
  postServicelocationCheck: (req, options = {}) => axios({ ...config.postServicelocationCheck, data: req, ...options }),
  getSelfserviceNoAnswerList: (req, options = {}) => axios({ ...config.getSelfserviceNoAnswerList, data: req, ...options }),
  postBatchOperateCheckConfig: (req, options = {}) => axios({ ...config.postBatchOperateCheckConfig, data: req, ...options }),
  postBatchOperateCopy: (req, options = {}) => axios({ ...config.postBatchOperateCopy, data: req, ...options }),
  postBatchOperateUpdate: (req, options = {}) => axios({ ...config.postBatchOperateUpdate, data: req, ...options }),
  getRuleCopy: (req, options = {}) => axios({ ...config.getRuleCopy, data: req, ...options }),
  postRuleList: (req, options = {}) => axios({ ...config.postRuleList, data: req, ...options }),
  getExpertServiceExpertList: (req, options = {}) => axios({ ...config.getExpertServiceExpertList, data: req, ...options }),
  getCustomerQueryCompanyByName: (req, options = {}) => axios({ ...config.getCustomerQueryCompanyByName, data: req, ...options }),
  getServiceConfigQueryIntentionServiceConfigList: (req, options = {}) => axios({ ...config.getServiceConfigQueryIntentionServiceConfigList, data: req, ...options }),
  getSelfserviceErrorWarnList: (req, options = {}) => axios({ ...config.getSelfserviceErrorWarnList, data: req, ...options }),
  postSelfserviceIgnoreErrorWarn: (req, options = {}) => axios({ ...config.postSelfserviceIgnoreErrorWarn, data: req, ...options }),
  postSelfserviceRemoveIgnoreErrorWarn: (req, options = {}) => axios({ ...config.postSelfserviceRemoveIgnoreErrorWarn, data: req, ...options }),
  postFinancialTaxConfigAdd: (req, options = {}) => axios({ ...config.postFinancialTaxConfigAdd, data: req, ...options }),
  postFinancialTaxConfigDelete: (req, options = {}) => axios({ ...config.postFinancialTaxConfigDelete, data: req, ...options }),
  postFinancialTaxConfigUpdate: (req, options = {}) => axios({ ...config.postFinancialTaxConfigUpdate, data: req, ...options }),
  getFinancialTaxConfigDetail: (req, options = {}) => axios({ ...config.getFinancialTaxConfigDetail, data: req, ...options }),
  getFinancialTaxConfigListByPage: (req, options = {}) => axios({ ...config.getFinancialTaxConfigListByPage, data: req, ...options }),
  getFinancialTaxConfigSummary: (req, options = {}) => axios({ ...config.getFinancialTaxConfigSummary, data: req, ...options }),
  postWarnConfigAdd: (req, options = {}) => axios({ ...config.postWarnConfigAdd, data: req, ...options }),
  postWarnConfigUpdate: (req, options = {}) => axios({ ...config.postWarnConfigUpdate, data: req, ...options }),
  postWarnConfigBatchUpdateStatus: (req, options = {}) => axios({ ...config.postWarnConfigBatchUpdateStatus, data: req, ...options }),
  postWarnConfigBatchUpdate: (req, options = {}) => axios({ ...config.postWarnConfigBatchUpdate, data: req, ...options }),
  getWarnConfigDetail: (req, options = {}) => axios({ ...config.getWarnConfigDetail, data: req, ...options }),
  getWarnConfigListByPage: (req, options = {}) => axios({ ...config.getWarnConfigListByPage, data: req, ...options }),
  getCommonQueryGroupList: (req, options = {}) => axios({ ...config.getCommonQueryGroupList, data: req, ...options }),
  postPriorityBatchUpdate: (req, options = {}) => axios({ ...config.postPriorityBatchUpdate, data: req, ...options }),
  postFeedbackBatchUpdate: (req, options = {}) => axios({ ...config.postFeedbackBatchUpdate, data: req, ...options }),
  postChatTipBatchUpdate: (req, options = {}) => axios({ ...config.postChatTipBatchUpdate, data: req, ...options }),
  postWindowBatchUpdate: (req, options = {}) => axios({ ...config.postWindowBatchUpdate, data: req, ...options }),
  postBatchUpdateCheckGlobalConfig: (req, options = {}) => axios({ ...config.postBatchUpdateCheckGlobalConfig, data: req, ...options }),
  getRuleGetRouteRuleOptionConfigList: (req, options = {}) => axios({ ...config.getRuleGetRouteRuleOptionConfigList, data: req, ...options }),
  postSelfserviceImportExceptionTips: (req, options = {}) => axios({ ...config.postSelfserviceImportExceptionTips, data: req, ...options }),
  postSelfserviceImportHelpTips: (req, options = {}) => axios({ ...config.postSelfserviceImportHelpTips, data: req, ...options }),
  getSelfserviceGetImportHelpTipsTemplateUrl: (req, options = {}) => axios({ ...config.getSelfserviceGetImportHelpTipsTemplateUrl, data: req, ...options }),
  getSelfserviceGetImportExceptionTipsTemplateUrl: (req, options = {}) => axios({ ...config.getSelfserviceGetImportExceptionTipsTemplateUrl, data: req, ...options }),
  postForbidList: (req, options = {}) => axios({ ...config.postForbidList, data: req, ...options }),
  postWarnConfigListByPage: (req, options = {}) => axios({ ...config.postWarnConfigListByPage, data: req, ...options }),
};
