// 该文件自动生成，请勿修改(除非知道自己在做什么)
/* eslint-disable */
import axios from '../axios';
import config from './config';
export default {
  getServiceManageDetail: (req, options = {}) => axios({ ...config.getServiceManageDetail, data: req, ...options }),
  getBasecodeBxfyy: (req, options = {}) => axios({ ...config.getBasecodeBxfyy, data: req, ...options }),
  getBasecodeDhJnz: (req, options = {}) => axios({ ...config.getBasecodeDhJnz, data: req, ...options }),
  getBasecodeFzgs: (req, options = {}) => axios({ ...config.getBasecodeFzgs, data: req, ...options }),
  getBasecodeFzgsForWdcx: (req, options = {}) => axios({ ...config.getBasecodeFzgsForWdcx, data: req, ...options }),
  getBasecodeFzgsTree: (req, options = {}) => axios({ ...config.getBasecodeFzgsTree, data: req, ...options }),
  getBasecodeGetlsqy: (req, options = {}) => axios({ ...config.getBasecodeGetlsqy, data: req, ...options }),
  getBasecodeRwlxByRwfs: (req, options = {}) => axios({ ...config.getBasecodeRwlxByRwfs, data: req, ...options }),
  getBasecodeGetSswd: (req, options = {}) => axios({ ...config.getBasecodeGetSswd, data: req, ...options }),
  getBasecodeWd: (req, options = {}) => axios({ ...config.getBasecodeWd, data: req, ...options }),
  getBasecodeGetWdBmByFzgsdm: (req, options = {}) => axios({ ...config.getBasecodeGetWdBmByFzgsdm, data: req, ...options }),
  getBasecodeWdForWdcx: (req, options = {}) => axios({ ...config.getBasecodeWdForWdcx, data: req, ...options }),
  getBasecodeGetWdxxByDm: (req, options = {}) => axios({ ...config.getBasecodeGetWdxxByDm, data: req, ...options }),
  getBasecodeWmqyy: (req, options = {}) => axios({ ...config.getBasecodeWmqyy, data: req, ...options }),
  getBasecodeXfyy: (req, options = {}) => axios({ ...config.getBasecodeXfyy, data: req, ...options }),
  getBasecodeGetYhfkCpxl: (req, options = {}) => axios({ ...config.getBasecodeGetYhfkCpxl, data: req, ...options }),
  getBasecodeGetYhfkStatus: (req, options = {}) => axios({ ...config.getBasecodeGetYhfkStatus, data: req, ...options }),
  getBasecodeCpdlByFzgsdm: (req, options = {}) => axios({ ...config.getBasecodeCpdlByFzgsdm, data: req, ...options }),
  getBasecodeQueryPzxxByJrhm: (req, options = {}) => axios({ ...config.getBasecodeQueryPzxxByJrhm, data: req, ...options }),
  getCommonAgentList: (req, options = {}) => axios({ ...config.getCommonAgentList, data: req, ...options }),
  getLive800Permission: (req, options = {}) => axios({ ...config.getLive800Permission, data: req, ...options }),
  getFileDownload: (req, options = {}) => axios({ ...config.getFileDownload, data: req, ...options }),
  getCommonGroupList: (req, options = {}) => axios({ ...config.getCommonGroupList, data: req, ...options }),
  getCommonOrgTree: (req, options = {}) => axios({ ...config.getCommonOrgTree, data: req, ...options }),
  getCommonOptions: (req, options = {}) => axios({ ...config.getCommonOptions, data: req, ...options }),
  getCommonReloadCache: (req, options = {}) => axios({ ...config.getCommonReloadCache, data: req, ...options }),
  postZxglZxjl: (req, options = {}) => axios({ ...config.postZxglZxjl, data: req, ...options }),
  getOlhelpChatList: (req, options = {}) => axios({ ...config.getOlhelpChatList, data: req, ...options }),
  getZxglGetExternalPlatformTelList: (req, options = {}) => axios({ ...config.getZxglGetExternalPlatformTelList, data: req, ...options }),
  getZxglKhxxList: (req, options = {}) => axios({ ...config.getZxglKhxxList, data: req, ...options }),
  getZxglLdzxList: (req, options = {}) => axios({ ...config.getZxglLdzxList, data: req, ...options }),
  getTsxxGetOneYearTscs: (req, options = {}) => axios({ ...config.getTsxxGetOneYearTscs, data: req, ...options }),
  getZxglGetZxcs: (req, options = {}) => axios({ ...config.getZxglGetZxcs, data: req, ...options }),
  getTsxxTsxxCx: (req, options = {}) => axios({ ...config.getTsxxTsxxCx, data: req, ...options }),
  getZxglQueryAreaidByZid: (req, options = {}) => axios({ ...config.getZxglQueryAreaidByZid, data: req, ...options }),
  getZxglQueryAreaList: (req, options = {}) => axios({ ...config.getZxglQueryAreaList, data: req, ...options }),
  getZxglQueryZxjlByLdhm: (req, options = {}) => axios({ ...config.getZxglQueryZxjlByLdhm, data: req, ...options }),
  postZxglSendHdMessage: (req, options = {}) => axios({ ...config.postZxglSendHdMessage, data: req, ...options }),
  getGroupList: (req, options = {}) => axios({ ...config.getGroupList, data: req, ...options }),
  postPersonalSave: (req, options = {}) => axios({ ...config.postPersonalSave, data: req, ...options }),
  getLxrGetLxrxxByYh: (req, options = {}) => axios({ ...config.getLxrGetLxrxxByYh, data: req, ...options }),
  getNsdwGetNsdwByKhid: (req, options = {}) => axios({ ...config.getNsdwGetNsdwByKhid, data: req, ...options }),
  getCustomerCenterQueryCustomerInfoFromTaxNet: (req, options = {}) => axios({ ...config.getCustomerCenterQueryCustomerInfoFromTaxNet, data: req, ...options }),
  getTemplateList: (req, options = {}) => axios({ ...config.getTemplateList, data: req, ...options }),
  postEmailSend: (req, options = {}) => axios({ ...config.postEmailSend, data: req, ...options }),
  postYhfkAddYhfk: (req, options = {}) => axios({ ...config.postYhfkAddYhfk, data: req, ...options }),
  getYhfkCheckYhfk: (req, options = {}) => axios({ ...config.getYhfkCheckYhfk, data: req, ...options }),
  postYhfkDeleteYhfk: (req, options = {}) => axios({ ...config.postYhfkDeleteYhfk, data: req, ...options }),
  getYhfkQueryYhfkList: (req, options = {}) => axios({ ...config.getYhfkQueryYhfkList, data: req, ...options }),
  postYhfkUpdateYhfkZx: (req, options = {}) => axios({ ...config.postYhfkUpdateYhfkZx, data: req, ...options }),
  getFjShareFile: (req, options = {}) => axios({ ...config.getFjShareFile, data: req, ...options }),
  getGroupQueryGroupWorkFlag: (req, options = {}) => axios({ ...config.getGroupQueryGroupWorkFlag, data: req, ...options }),
  getHsGetBindXzsInfo: (req, options = {}) => axios({ ...config.getHsGetBindXzsInfo, data: req, ...options }),
  getSqxxGetFwsqByKhid: (req, options = {}) => axios({ ...config.getSqxxGetFwsqByKhid, data: req, ...options }),
  getSqxxGetRjsqByKhid: (req, options = {}) => axios({ ...config.getSqxxGetRjsqByKhid, data: req, ...options }),
  getOrderGetUserOrder: (req, options = {}) => axios({ ...config.getOrderGetUserOrder, data: req, ...options }),
  getCustomerPortalSearchCustomer: (req, options = {}) => axios({ ...config.getCustomerPortalSearchCustomer, data: req, ...options }),
  getInternalDataDetail: (req, options = {}) => axios({ ...config.getInternalDataDetail, data: req, ...options }),
  getInternalDataList: (req, options = {}) => axios({ ...config.getInternalDataList, data: req, ...options }),
  getYxxsGetWgbxsts: (req, options = {}) => axios({ ...config.getYxxsGetWgbxsts, data: req, ...options }),
  getYxxsDoingYxxsByYh: (req, options = {}) => axios({ ...config.getYxxsDoingYxxsByYh, data: req, ...options }),
  getYxxsXsDetail: (req, options = {}) => axios({ ...config.getYxxsXsDetail, data: req, ...options }),
  getYxxsYxxsByYh: (req, options = {}) => axios({ ...config.getYxxsYxxsByYh, data: req, ...options }),
  getRobotAsk: (req, options = {}) => axios({ ...config.getRobotAsk, data: req, ...options }),
  getRobotDimension: (req, options = {}) => axios({ ...config.getRobotDimension, data: req, ...options }),
  getChatContent: (req, options = {}) => axios({ ...config.getChatContent, data: req, ...options }),
  getRobotSuggestedQuestion: (req, options = {}) => axios({ ...config.getRobotSuggestedQuestion, data: req, ...options }),
  getPersonaQueryCustomerTagList: (req, options = {}) => axios({ ...config.getPersonaQueryCustomerTagList, data: req, ...options }),
  getPersonaQueryPersonalTagList: (req, options = {}) => axios({ ...config.getPersonaQueryPersonalTagList, data: req, ...options }),
  getToolDetail: (req, options = {}) => axios({ ...config.getToolDetail, data: req, ...options }),
  getCustomerJoinedList: (req, options = {}) => axios({ ...config.getCustomerJoinedList, data: req, ...options }),
  getCustomerRemainJoinList: (req, options = {}) => axios({ ...config.getCustomerRemainJoinList, data: req, ...options }),
  getPersonJoinedList: (req, options = {}) => axios({ ...config.getPersonJoinedList, data: req, ...options }),
  getCustomerQuery: (req, options = {}) => axios({ ...config.getCustomerQuery, data: req, ...options }),
  getCustomerList: (req, options = {}) => axios({ ...config.getCustomerList, data: req, ...options }),
  getPersonQuery: (req, options = {}) => axios({ ...config.getPersonQuery, data: req, ...options }),
  getPersonList: (req, options = {}) => axios({ ...config.getPersonList, data: req, ...options }),
  getSmsDxList: (req, options = {}) => axios({ ...config.getSmsDxList, data: req, ...options }),
  postSmsReSend: (req, options = {}) => axios({ ...config.postSmsReSend, data: req, ...options }),
  postSmsDx: (req, options = {}) => axios({ ...config.postSmsDx, data: req, ...options }),
  getSwFzgsSld: (req, options = {}) => axios({ ...config.getSwFzgsSld, data: req, ...options }),
  getSwHkzzUrl: (req, options = {}) => axios({ ...config.getSwHkzzUrl, data: req, ...options }),
  getSwYxtj: (req, options = {}) => axios({ ...config.getSwYxtj, data: req, ...options }),
  getSywPxjh: (req, options = {}) => axios({ ...config.getSywPxjh, data: req, ...options }),
  getDhrwCalloutList: (req, options = {}) => axios({ ...config.getDhrwCalloutList, data: req, ...options }),
  getRwglSmrwList: (req, options = {}) => axios({ ...config.getRwglSmrwList, data: req, ...options }),
  getRwglYcrwList: (req, options = {}) => axios({ ...config.getRwglYcrwList, data: req, ...options }),
  getRwglZdxcList: (req, options = {}) => axios({ ...config.getRwglZdxcList, data: req, ...options }),
  getUserCurrentUser: (req, options = {}) => axios({ ...config.getUserCurrentUser, data: req, ...options }),
  getPermissionList: (req, options = {}) => axios({ ...config.getPermissionList, data: req, ...options }),
  getUserQueryByUserId: (req, options = {}) => axios({ ...config.getUserQueryByUserId, data: req, ...options }),
  postAppealAppeal: (req, options = {}) => axios({ ...config.postAppealAppeal, data: req, ...options }),
  getSmsMessageList: (req, options = {}) => axios({ ...config.getSmsMessageList, data: req, ...options }),
  postSmsReSendMessage: (req, options = {}) => axios({ ...config.postSmsReSendMessage, data: req, ...options }),
  postSmsSendMessage: (req, options = {}) => axios({ ...config.postSmsSendMessage, data: req, ...options }),
  getItpcoreGetBindInfo: (req, options = {}) => axios({ ...config.getItpcoreGetBindInfo, data: req, ...options }),
  getTrainGetEnrollUrl: (req, options = {}) => axios({ ...config.getTrainGetEnrollUrl, data: req, ...options }),
  getOnlineList: (req, options = {}) => axios({ ...config.getOnlineList, data: req, ...options }),
  postSuitSave: (req, options = {}) => axios({ ...config.postSuitSave, data: req, ...options }),
  getIncallList: (req, options = {}) => axios({ ...config.getIncallList, data: req, ...options }),
  getSuitList: (req, options = {}) => axios({ ...config.getSuitList, data: req, ...options }),
  getCalloutList: (req, options = {}) => axios({ ...config.getCalloutList, data: req, ...options }),
  getHomeList: (req, options = {}) => axios({ ...config.getHomeList, data: req, ...options }),
  getRemoteList: (req, options = {}) => axios({ ...config.getRemoteList, data: req, ...options }),
  getStoreList: (req, options = {}) => axios({ ...config.getStoreList, data: req, ...options }),
  postClientRelationEnd: (req, options = {}) => axios({ ...config.postClientRelationEnd, data: req, ...options }),
  getAgencyDetail: (req, options = {}) => axios({ ...config.getAgencyDetail, data: req, ...options }),
  getAgencyList: (req, options = {}) => axios({ ...config.getAgencyList, data: req, ...options }),
  getAgencyQueryClient: (req, options = {}) => axios({ ...config.getAgencyQueryClient, data: req, ...options }),
  postAgencyRemarkUpdate: (req, options = {}) => axios({ ...config.postAgencyRemarkUpdate, data: req, ...options }),
  getContactList: (req, options = {}) => axios({ ...config.getContactList, data: req, ...options }),
  getCompanyList: (req, options = {}) => axios({ ...config.getCompanyList, data: req, ...options }),
  getCompanyQueryFromTaxNet: (req, options = {}) => axios({ ...config.getCompanyQueryFromTaxNet, data: req, ...options }),
  getCompanyInfo: (req, options = {}) => axios({ ...config.getCompanyInfo, data: req, ...options }),
  postRemarkUpdate: (req, options = {}) => axios({ ...config.postRemarkUpdate, data: req, ...options }),
  getTagList: (req, options = {}) => axios({ ...config.getTagList, data: req, ...options }),
  postCompanyUnbindCompanyPerson: (req, options = {}) => axios({ ...config.postCompanyUnbindCompanyPerson, data: req, ...options }),
  getOrgList: (req, options = {}) => axios({ ...config.getOrgList, data: req, ...options }),
  getStationList: (req, options = {}) => axios({ ...config.getStationList, data: req, ...options }),
  getOrgStoreList: (req, options = {}) => axios({ ...config.getOrgStoreList, data: req, ...options }),
  getPersonalDetail: (req, options = {}) => axios({ ...config.getPersonalDetail, data: req, ...options }),
  getPersonalQueryLastCallTime: (req, options = {}) => axios({ ...config.getPersonalQueryLastCallTime, data: req, ...options }),
  postPersonalRemarkUpdate: (req, options = {}) => axios({ ...config.postPersonalRemarkUpdate, data: req, ...options }),
  getPersonalTagList: (req, options = {}) => axios({ ...config.getPersonalTagList, data: req, ...options }),
  getGroupDetail: (req, options = {}) => axios({ ...config.getGroupDetail, data: req, ...options }),
  getFileDownload_1604658160: (req, options = {}) => axios({ ...config.getFileDownload_1604658160, data: req, ...options }),
  postFileUpload: (req, options = {}) => axios({ ...config.postFileUpload, data: req, ...options }),
  getClueList: (req, options = {}) => axios({ ...config.getClueList, data: req, ...options }),
  getClueCount: (req, options = {}) => axios({ ...config.getClueCount, data: req, ...options }),
  getProductDue: (req, options = {}) => axios({ ...config.getProductDue, data: req, ...options }),
  getProductIntention: (req, options = {}) => axios({ ...config.getProductIntention, data: req, ...options }),
  postClueSave: (req, options = {}) => axios({ ...config.postClueSave, data: req, ...options }),
  getOrderList: (req, options = {}) => axios({ ...config.getOrderList, data: req, ...options }),
  getSendInvoiceModify: (req, options = {}) => axios({ ...config.getSendInvoiceModify, data: req, ...options }),
  getClueList_1605681137: (req, options = {}) => axios({ ...config.getClueList_1605681137, data: req, ...options }),
  getClueCount_1605681137: (req, options = {}) => axios({ ...config.getClueCount_1605681137, data: req, ...options }),
  getClueProductDue: (req, options = {}) => axios({ ...config.getClueProductDue, data: req, ...options }),
  getClueProductIntention: (req, options = {}) => axios({ ...config.getClueProductIntention, data: req, ...options }),
  postClueSave_1605681137: (req, options = {}) => axios({ ...config.postClueSave_1605681137, data: req, ...options }),
  postClueRenewIntention: (req, options = {}) => axios({ ...config.postClueRenewIntention, data: req, ...options }),
  getSmsList: (req, options = {}) => axios({ ...config.getSmsList, data: req, ...options }),
  postSmsSend: (req, options = {}) => axios({ ...config.postSmsSend, data: req, ...options }),
  getRecordGetLastCallTime: (req, options = {}) => axios({ ...config.getRecordGetLastCallTime, data: req, ...options }),
  postRecordSave: (req, options = {}) => axios({ ...config.postRecordSave, data: req, ...options }),
  getProductDueWalle: (req, options = {}) => axios({ ...config.getProductDueWalle, data: req, ...options }),
  getProductIntentionWalle: (req, options = {}) => axios({ ...config.getProductIntentionWalle, data: req, ...options }),
  getConsultIncall: (req, options = {}) => axios({ ...config.getConsultIncall, data: req, ...options }),
  getCreditQuery: (req, options = {}) => axios({ ...config.getCreditQuery, data: req, ...options }),
  getRightsTrainCustomerQuery: (req, options = {}) => axios({ ...config.getRightsTrainCustomerQuery, data: req, ...options }),
  getRightsTrainPersonQuery: (req, options = {}) => axios({ ...config.getRightsTrainPersonQuery, data: req, ...options }),
  getClientList: (req, options = {}) => axios({ ...config.getClientList, data: req, ...options }),
  getCompanySearch: (req, options = {}) => axios({ ...config.getCompanySearch, data: req, ...options }),
  getGroupListWalle: (req, options = {}) => axios({ ...config.getGroupListWalle, data: req, ...options }),
  getV2List: (req, options = {}) => axios({ ...config.getV2List, data: req, ...options }),
  getIncallCount: (req, options = {}) => axios({ ...config.getIncallCount, data: req, ...options }),
  getStoreCustomer: (req, options = {}) => axios({ ...config.getStoreCustomer, data: req, ...options }),
  getSuitCount: (req, options = {}) => axios({ ...config.getSuitCount, data: req, ...options }),
  getOrgTree: (req, options = {}) => axios({ ...config.getOrgTree, data: req, ...options }),
  getSmsTemplate: (req, options = {}) => axios({ ...config.getSmsTemplate, data: req, ...options }),
  getClassifyList: (req, options = {}) => axios({ ...config.getClassifyList, data: req, ...options }),
  getTaskQueryType: (req, options = {}) => axios({ ...config.getTaskQueryType, data: req, ...options }),
  getUserFuzzyQuery: (req, options = {}) => axios({ ...config.getUserFuzzyQuery, data: req, ...options }),
  getMarketDivideList: (req, options = {}) => axios({ ...config.getMarketDivideList, data: req, ...options }),
  getCompanyToolDetail: (req, options = {}) => axios({ ...config.getCompanyToolDetail, data: req, ...options }),
  getFileShareFile: (req, options = {}) => axios({ ...config.getFileShareFile, data: req, ...options }),
  getCommonQueryAreaList: (req, options = {}) => axios({ ...config.getCommonQueryAreaList, data: req, ...options }),
  getTypeList: (req, options = {}) => axios({ ...config.getTypeList, data: req, ...options }),
  postTaskRemindCallback: (req, options = {}) => axios({ ...config.postTaskRemindCallback, data: req, ...options }),
  getCompanyStore: (req, options = {}) => axios({ ...config.getCompanyStore, data: req, ...options }),
  getSuitList_1606819251: (req, options = {}) => axios({ ...config.getSuitList_1606819251, data: req, ...options }),
  getBankCollection: (req, options = {}) => axios({ ...config.getBankCollection, data: req, ...options }),
  getOrderLogistics: (req, options = {}) => axios({ ...config.getOrderLogistics, data: req, ...options }),
  postSendInvoiceModify: (req, options = {}) => axios({ ...config.postSendInvoiceModify, data: req, ...options }),
  getRecordDetail: (req, options = {}) => axios({ ...config.getRecordDetail, data: req, ...options }),
  getActionList: (req, options = {}) => axios({ ...config.getActionList, data: req, ...options }),
  postActionSave: (req, options = {}) => axios({ ...config.postActionSave, data: req, ...options }),
  getActionDetailList: (req, options = {}) => axios({ ...config.getActionDetailList, data: req, ...options }),
  getAgencyQuery: (req, options = {}) => axios({ ...config.getAgencyQuery, data: req, ...options }),
  getAgencySearch: (req, options = {}) => axios({ ...config.getAgencySearch, data: req, ...options }),
  getAgencyAgentInfo: (req, options = {}) => axios({ ...config.getAgencyAgentInfo, data: req, ...options }),
  getAgencyTagList: (req, options = {}) => axios({ ...config.getAgencyTagList, data: req, ...options }),
  postCommonFileUpload: (req, options = {}) => axios({ ...config.postCommonFileUpload, data: req, ...options }),
  postServiceAccept: (req, options = {}) => axios({ ...config.postServiceAccept, data: req, ...options }),
  getServiceList: (req, options = {}) => axios({ ...config.getServiceList, data: req, ...options }),
  postServiceSendMessage: (req, options = {}) => axios({ ...config.postServiceSendMessage, data: req, ...options }),
  postServiceClose: (req, options = {}) => axios({ ...config.postServiceClose, data: req, ...options }),
  postProcessFinish: (req, options = {}) => axios({ ...config.postProcessFinish, data: req, ...options }),
  getConsultList: (req, options = {}) => axios({ ...config.getConsultList, data: req, ...options }),
  postCommunicationSave: (req, options = {}) => axios({ ...config.postCommunicationSave, data: req, ...options }),
  postServiceUploadFile: (req, options = {}) => axios({ ...config.postServiceUploadFile, data: req, ...options }),
  getCustomerCenterQueryCompanyInfo: (req, options = {}) => axios({ ...config.getCustomerCenterQueryCompanyInfo, data: req, ...options }),
  postServiceDeleteAttachment: (req, options = {}) => axios({ ...config.postServiceDeleteAttachment, data: req, ...options }),
  postServiceCalculateRealTaxBurdenRate: (req, options = {}) => axios({ ...config.postServiceCalculateRealTaxBurdenRate, data: req, ...options }),
  getTableDetail: (req, options = {}) => axios({ ...config.getTableDetail, data: req, ...options }),
  getServiceDetail: (req, options = {}) => axios({ ...config.getServiceDetail, data: req, ...options }),
  getTreeMonth: (req, options = {}) => axios({ ...config.getTreeMonth, data: req, ...options }),
  getTreeTable: (req, options = {}) => axios({ ...config.getTreeTable, data: req, ...options }),
  getServiceDetailByLogId: (req, options = {}) => axios({ ...config.getServiceDetailByLogId, data: req, ...options }),
  getServiceDetailByProcessRecordId: (req, options = {}) => axios({ ...config.getServiceDetailByProcessRecordId, data: req, ...options }),
  getServiceDetailByRecordId: (req, options = {}) => axios({ ...config.getServiceDetailByRecordId, data: req, ...options }),
  getServiceDetailForEp: (req, options = {}) => axios({ ...config.getServiceDetailForEp, data: req, ...options }),
  postServiceRealTaxBurdenRate: (req, options = {}) => axios({ ...config.postServiceRealTaxBurdenRate, data: req, ...options }),
  getCustomerDetail: (req, options = {}) => axios({ ...config.getCustomerDetail, data: req, ...options }),
  getTodoTaskUploadTodoReportData: (req, options = {}) => axios({ ...config.getTodoTaskUploadTodoReportData, data: req, ...options }),
  getTodoTaskConsultTodoQuery: (req, options = {}) => axios({ ...config.getTodoTaskConsultTodoQuery, data: req, ...options }),
  getRelList: (req, options = {}) => axios({ ...config.getRelList, data: req, ...options }),
  getQuestionnaireCompanyList: (req, options = {}) => axios({ ...config.getQuestionnaireCompanyList, data: req, ...options }),
  getAgentPermissionSyntheticalPage_1668155970: (req, options = {}) => axios({ ...config.getAgentPermissionSyntheticalPage_1668155970, data: req, ...options }),
  postQuestionnaireGetUrl: (req, options = {}) => axios({ ...config.postQuestionnaireGetUrl, data: req, ...options }),
  postAiAnalyze: (req, options = {}) => axios({ ...config.postAiAnalyze, data: req, ...options }),
  getMaterialGetMaterial: (req, options = {}) => axios({ ...config.getMaterialGetMaterial, data: req, ...options }),
  getSmsQueryTemplateList: (req, options = {}) => axios({ ...config.getSmsQueryTemplateList, data: req, ...options }),
  getSmsGetTemplateContent: (req, options = {}) => axios({ ...config.getSmsGetTemplateContent, data: req, ...options }),
  getOrderNewList: (req, options = {}) => axios({ ...config.getOrderNewList, data: req, ...options }),
  getCommonTest: (req, options = {}) => axios({ ...config.getCommonTest, data: req, ...options }),
  postWorkOrderCreate: (req, options = {}) => axios({ ...config.postWorkOrderCreate, data: req, ...options }),
  postWorkOrderEdit: (req, options = {}) => axios({ ...config.postWorkOrderEdit, data: req, ...options }),
  getWorkOrderPageList: (req, options = {}) => axios({ ...config.getWorkOrderPageList, data: req, ...options }),
  getPageListTeam: (req, options = {}) => axios({ ...config.getPageListTeam, data: req, ...options }),
  getPageListManage: (req, options = {}) => axios({ ...config.getPageListManage, data: req, ...options }),
  getDetailTeam: (req, options = {}) => axios({ ...config.getDetailTeam, data: req, ...options }),
  getDetailMange: (req, options = {}) => axios({ ...config.getDetailMange, data: req, ...options }),
  getDetailUser: (req, options = {}) => axios({ ...config.getDetailUser, data: req, ...options }),
  postWorkOrderBatchCloseOrder: (req, options = {}) => axios({ ...config.postWorkOrderBatchCloseOrder, data: req, ...options }),
  postWorkOrderHandleOrder: (req, options = {}) => axios({ ...config.postWorkOrderHandleOrder, data: req, ...options }),
  postWorkOrderSolveOrder: (req, options = {}) => axios({ ...config.postWorkOrderSolveOrder, data: req, ...options }),
  postWorkOrderUpgradeStopPage: (req, options = {}) => axios({ ...config.postWorkOrderUpgradeStopPage, data: req, ...options }),
  postWorkOrderSycStopPage: (req, options = {}) => axios({ ...config.postWorkOrderSycStopPage, data: req, ...options }),
  postCommonGetJsapiSignature: (req, options = {}) => axios({ ...config.postCommonGetJsapiSignature, data: req, ...options }),
  getWorkOrderQuestionLabelDict: (req, options = {}) => axios({ ...config.getWorkOrderQuestionLabelDict, data: req, ...options }),
  getWorkOrderGetZentaoModule: (req, options = {}) => axios({ ...config.getWorkOrderGetZentaoModule, data: req, ...options }),
  getCommonOrderOptions: (req, options = {}) => axios({ ...config.getCommonOrderOptions, data: req, ...options }),
  getConfigGetLatestSpecialServiceConfig: (req, options = {}) => axios({ ...config.getConfigGetLatestSpecialServiceConfig, data: req, ...options }),
  postServiceUploadWealthAndAccountAttachment: (req, options = {}) => axios({ ...config.postServiceUploadWealthAndAccountAttachment, data: req, ...options }),
  postServiceAddSpecialServiceRecord: (req, options = {}) => axios({ ...config.postServiceAddSpecialServiceRecord, data: req, ...options }),
  getSchedulePageList: (req, options = {}) => axios({ ...config.getSchedulePageList, data: req, ...options }),
  getServiceQueryWealthAccountInfo: (req, options = {}) => axios({ ...config.getServiceQueryWealthAccountInfo, data: req, ...options }),
  getScheduleTaskDetail: (req, options = {}) => axios({ ...config.getScheduleTaskDetail, data: req, ...options }),
  postScheduleUpdateSubTaskStatus: (req, options = {}) => axios({ ...config.postScheduleUpdateSubTaskStatus, data: req, ...options }),
  postScheduleUpdateSubTaskMatterStatus: (req, options = {}) => axios({ ...config.postScheduleUpdateSubTaskMatterStatus, data: req, ...options }),
  postScheduleDelFeedbackFile: (req, options = {}) => axios({ ...config.postScheduleDelFeedbackFile, data: req, ...options }),
  postSubTaskSave: (req, options = {}) => axios({ ...config.postSubTaskSave, data: req, ...options }),
  postServiceDetection: (req, options = {}) => axios({ ...config.postServiceDetection, data: req, ...options }),
  postServiceUpdateDetection: (req, options = {}) => axios({ ...config.postServiceUpdateDetection, data: req, ...options }),
  postServiceSelectInterrogation: (req, options = {}) => axios({ ...config.postServiceSelectInterrogation, data: req, ...options }),
  postServiceUpdateInterrogation: (req, options = {}) => axios({ ...config.postServiceUpdateInterrogation, data: req, ...options }),
  getPlanGetRequirementList: (req, options = {}) => axios({ ...config.getPlanGetRequirementList, data: req, ...options }),
  getPlanGetSolutionList: (req, options = {}) => axios({ ...config.getPlanGetSolutionList, data: req, ...options }),
  getPlanGetTaskList: (req, options = {}) => axios({ ...config.getPlanGetTaskList, data: req, ...options }),
  getServiceGetRecordMaterialList: (req, options = {}) => axios({ ...config.getServiceGetRecordMaterialList, data: req, ...options }),
  postExecPlanDelete: (req, options = {}) => axios({ ...config.postExecPlanDelete, data: req, ...options }),
  postSubTaskDelete: (req, options = {}) => axios({ ...config.postSubTaskDelete, data: req, ...options }),
  postSubTaskUpdate: (req, options = {}) => axios({ ...config.postSubTaskUpdate, data: req, ...options }),
  postExecMatterSave: (req, options = {}) => axios({ ...config.postExecMatterSave, data: req, ...options }),
  postExecMatterDelete: (req, options = {}) => axios({ ...config.postExecMatterDelete, data: req, ...options }),
  getDeletedRequirementAndSolutionQuery: (req, options = {}) => axios({ ...config.getDeletedRequirementAndSolutionQuery, data: req, ...options }),
  getExecPlanQuery: (req, options = {}) => axios({ ...config.getExecPlanQuery, data: req, ...options }),
  postPlanSelect: (req, options = {}) => axios({ ...config.postPlanSelect, data: req, ...options }),
  getSchemeGenerate: (req, options = {}) => axios({ ...config.getSchemeGenerate, data: req, ...options }),
  postPlanUpdateMaterial: (req, options = {}) => axios({ ...config.postPlanUpdateMaterial, data: req, ...options }),
  postExecPlanSave: (req, options = {}) => axios({ ...config.postExecPlanSave, data: req, ...options }),
  postServiceUploadFileAndUpdateBusiness: (req, options = {}) => axios({ ...config.postServiceUploadFileAndUpdateBusiness, data: req, ...options }),
  postSchemePublish: (req, options = {}) => axios({ ...config.postSchemePublish, data: req, ...options }),
  getServiceCheckExistRecord: (req, options = {}) => axios({ ...config.getServiceCheckExistRecord, data: req, ...options }),
  postServiceAddPreSale: (req, options = {}) => axios({ ...config.postServiceAddPreSale, data: req, ...options }),
  postExecPlanExcelExport: (req, options = {}) => axios({ ...config.postExecPlanExcelExport, data: req, ...options }),
  postSchemeWordExport: (req, options = {}) => axios({ ...config.postSchemeWordExport, data: req, ...options }),
  postServiceUploadRecordMaterial: (req, options = {}) => axios({ ...config.postServiceUploadRecordMaterial, data: req, ...options }),
  postServiceDeleteRecordMaterial: (req, options = {}) => axios({ ...config.postServiceDeleteRecordMaterial, data: req, ...options }),
  postWorkOrderCancelOrderSolve: (req, options = {}) => axios({ ...config.postWorkOrderCancelOrderSolve, data: req, ...options }),
  postWorkOrderCacheSolveOrderData: (req, options = {}) => axios({ ...config.postWorkOrderCacheSolveOrderData, data: req, ...options }),
  getWorkOrderGetCacheSolveOrderData: (req, options = {}) => axios({ ...config.getWorkOrderGetCacheSolveOrderData, data: req, ...options }),
  getDeleteCheck: (req, options = {}) => axios({ ...config.getDeleteCheck, data: req, ...options }),
  getOlAgentAssistanceGetAnswer: (req, options = {}) => axios({ ...config.getOlAgentAssistanceGetAnswer, data: req, ...options }),
  getCommonGetIrisValue: (req, options = {}) => axios({ ...config.getCommonGetIrisValue, data: req, ...options }),
  getManageExport: (req, options = {}) => axios({ ...config.getManageExport, data: req, ...options }),
  getTeamExport: (req, options = {}) => axios({ ...config.getTeamExport, data: req, ...options }),
  postServiceAccountBalance: (req, options = {}) => axios({ ...config.postServiceAccountBalance, data: req, ...options }),
  getWorkOrderGetOperator: (req, options = {}) => axios({ ...config.getWorkOrderGetOperator, data: req, ...options }),
  postFeedbackSave: (req, options = {}) => axios({ ...config.postFeedbackSave, data: req, ...options }),
  postFrontEndConfigSave: (req, options = {}) => axios({ ...config.postFrontEndConfigSave, data: req, ...options }),
  getFrontEndConfigQuery: (req, options = {}) => axios({ ...config.getFrontEndConfigQuery, data: req, ...options }),
  getModelButtonQuery: (req, options = {}) => axios({ ...config.getModelButtonQuery, data: req, ...options }),
  getServiceZxCompanySearch: (req, options = {}) => axios({ ...config.getServiceZxCompanySearch, data: req, ...options }),
  postServiceSaveZXPTPreSale: (req, options = {}) => axios({ ...config.postServiceSaveZXPTPreSale, data: req, ...options }),
  getUserFuzzyQueryOnJob: (req, options = {}) => axios({ ...config.getUserFuzzyQueryOnJob, data: req, ...options }),
  postWorkOrderUploadAndSendMegCard: (req, options = {}) => axios({ ...config.postWorkOrderUploadAndSendMegCard, data: req, ...options }),
  postScheduleHistorySave: (req, options = {}) => axios({ ...config.postScheduleHistorySave, data: req, ...options }),
  postWorkOrderReassign: (req, options = {}) => axios({ ...config.postWorkOrderReassign, data: req, ...options }),
  postDescriptionRemind: (req, options = {}) => axios({ ...config.postDescriptionRemind, data: req, ...options }),
  postDescriptionSave: (req, options = {}) => axios({ ...config.postDescriptionSave, data: req, ...options }),
  postReportDetection: (req, options = {}) => axios({ ...config.postReportDetection, data: req, ...options }),
  getServiceGetMaterialRecordList: (req, options = {}) => axios({ ...config.getServiceGetMaterialRecordList, data: req, ...options }),
  postServiceOperationMaterialRecordStatus: (req, options = {}) => axios({ ...config.postServiceOperationMaterialRecordStatus, data: req, ...options }),
  postServiceUpdateMaterialRecord: (req, options = {}) => axios({ ...config.postServiceUpdateMaterialRecord, data: req, ...options }),
  postServiceSaveCustomMaterialRecord: (req, options = {}) => axios({ ...config.postServiceSaveCustomMaterialRecord, data: req, ...options }),
  postServiceUpdateCustomMaterialRecord: (req, options = {}) => axios({ ...config.postServiceUpdateCustomMaterialRecord, data: req, ...options }),
  postServiceDeleteCustomMaterialRecord: (req, options = {}) => axios({ ...config.postServiceDeleteCustomMaterialRecord, data: req, ...options }),
  postServiceUpdatePublishStatus: (req, options = {}) => axios({ ...config.postServiceUpdatePublishStatus, data: req, ...options }),
  postServiceCheckPreSale: (req, options = {}) => axios({ ...config.postServiceCheckPreSale, data: req, ...options }),
  postMarkRead: (req, options = {}) => axios({ ...config.postMarkRead, data: req, ...options }),
  postWorkOrderUploadAndSendMsgCard: (req, options = {}) => axios({ ...config.postWorkOrderUploadAndSendMsgCard, data: req, ...options }),
  getCommonHierarchicalOptions: (req, options = {}) => axios({ ...config.getCommonHierarchicalOptions, data: req, ...options }),
  postServiceQueryTable: (req, options = {}) => axios({ ...config.postServiceQueryTable, data: req, ...options }),
  getFileWriteStream: (req, options = {}) => axios({ ...config.getFileWriteStream, data: req, ...options }),
  getWorkOrderConversionZenTaoUrl: (req, options = {}) => axios({ ...config.getWorkOrderConversionZenTaoUrl, data: req, ...options }),
  getScheduleHistoryList: (req, options = {}) => axios({ ...config.getScheduleHistoryList, data: req, ...options }),
  getCompanyQueryCustomerId: (req, options = {}) => axios({ ...config.getCompanyQueryCustomerId, data: req, ...options }),
  getAccessLogQueryByLogId: (req, options = {}) => axios({ ...config.getAccessLogQueryByLogId, data: req, ...options }),
  postServiceAddEarlySpecialService: (req, options = {}) => axios({ ...config.postServiceAddEarlySpecialService, data: req, ...options }),
  postDeliveryDashboard: (req, options = {}) => axios({ ...config.postDeliveryDashboard, data: req, ...options }),
  postDashboardExport: (req, options = {}) => axios({ ...config.postDashboardExport, data: req, ...options }),
  postServicePeriodicServiceReport: (req, options = {}) => axios({ ...config.postServicePeriodicServiceReport, data: req, ...options }),
  postPreDetection: (req, options = {}) => axios({ ...config.postPreDetection, data: req, ...options }),
  postExcelTask: (req, options = {}) => axios({ ...config.postExcelTask, data: req, ...options }),
  postServiceEditRoleRecord: (req, options = {}) => axios({ ...config.postServiceEditRoleRecord, data: req, ...options }),
  getServiceQueryRoleRecord: (req, options = {}) => axios({ ...config.getServiceQueryRoleRecord, data: req, ...options }),
  postWorkOrderGetSecuritySign: (req, options = {}) => axios({ ...config.postWorkOrderGetSecuritySign, data: req, ...options }),
  getOlAgentAssistanceFactorsDict: (req, options = {}) => axios({ ...config.getOlAgentAssistanceFactorsDict, data: req, ...options }),
  getOlAgentAssistanceGetQuestionReply: (req, options = {}) => axios({ ...config.getOlAgentAssistanceGetQuestionReply, data: req, ...options }),
  getWorkOrderGetProductList: (req, options = {}) => axios({ ...config.getWorkOrderGetProductList, data: req, ...options }),
  getLatestScheduleQuery: (req, options = {}) => axios({ ...config.getLatestScheduleQuery, data: req, ...options }),
  postMsgTest: (req, options = {}) => axios({ ...config.postMsgTest, data: req, ...options }),
  postCommonGetSecuritySign: (req, options = {}) => axios({ ...config.postCommonGetSecuritySign, data: req, ...options }),
  getTaxDeclare: (req, options = {}) => axios({ ...config.getTaxDeclare, data: req, ...options }),
  getOlAgentAssistanceGetFactorDict: (req, options = {}) => axios({ ...config.getOlAgentAssistanceGetFactorDict, data: req, ...options }),
  postExceptionSave: (req, options = {}) => axios({ ...config.postExceptionSave, data: req, ...options }),
  postExceptionUpdate: (req, options = {}) => axios({ ...config.postExceptionUpdate, data: req, ...options }),
  postStatusUpdate: (req, options = {}) => axios({ ...config.postStatusUpdate, data: req, ...options }),
  getExceptionDetail: (req, options = {}) => axios({ ...config.getExceptionDetail, data: req, ...options }),
  postExceptionDelete: (req, options = {}) => axios({ ...config.postExceptionDelete, data: req, ...options }),
  postExceptionPage: (req, options = {}) => axios({ ...config.postExceptionPage, data: req, ...options }),
  getServiceCheckExistSpecialServiceTable: (req, options = {}) => axios({ ...config.getServiceCheckExistSpecialServiceTable, data: req, ...options }),
  postServiceUpdateSpecialServiceTable: (req, options = {}) => axios({ ...config.postServiceUpdateSpecialServiceTable, data: req, ...options }),
  getServiceGetServiceSendBack: (req, options = {}) => axios({ ...config.getServiceGetServiceSendBack, data: req, ...options }),
  postUniqueCheck: (req, options = {}) => axios({ ...config.postUniqueCheck, data: req, ...options }),
  postExceptionFollow: (req, options = {}) => axios({ ...config.postExceptionFollow, data: req, ...options }),
  getServiceQuestion: (req, options = {}) => axios({ ...config.getServiceQuestion, data: req, ...options }),
  getServiceGetAnswer: (req, options = {}) => axios({ ...config.getServiceGetAnswer, data: req, ...options }),
  postServicePreGetAnswer: (req, options = {}) => axios({ ...config.postServicePreGetAnswer, data: req, ...options }),
  postFactorClear: (req, options = {}) => axios({ ...config.postFactorClear, data: req, ...options }),
  getServiceHasCreateWorkOrder: (req, options = {}) => axios({ ...config.getServiceHasCreateWorkOrder, data: req, ...options }),
  postServiceVote: (req, options = {}) => axios({ ...config.postServiceVote, data: req, ...options }),
  getServiceQueryVote: (req, options = {}) => axios({ ...config.getServiceQueryVote, data: req, ...options }),
  getSystemAndModuleQuery: (req, options = {}) => axios({ ...config.getSystemAndModuleQuery, data: req, ...options }),
  getLocationQuery: (req, options = {}) => axios({ ...config.getLocationQuery, data: req, ...options }),
  postCarbonCopyUserSet: (req, options = {}) => axios({ ...config.postCarbonCopyUserSet, data: req, ...options }),
  postAnswerList: (req, options = {}) => axios({ ...config.postAnswerList, data: req, ...options }),
  postAnswerSend: (req, options = {}) => axios({ ...config.postAnswerSend, data: req, ...options }),
  postAnswerType: (req, options = {}) => axios({ ...config.postAnswerType, data: req, ...options }),
  postViewLast: (req, options = {}) => axios({ ...config.postViewLast, data: req, ...options }),
  postViewSave: (req, options = {}) => axios({ ...config.postViewSave, data: req, ...options }),
  getChatAnalysisResultDetail: (req, options = {}) => axios({ ...config.getChatAnalysisResultDetail, data: req, ...options }),
  postChatAnalysisResultPage: (req, options = {}) => axios({ ...config.postChatAnalysisResultPage, data: req, ...options }),
  postManageCancelDeliverySchedule: (req, options = {}) => axios({ ...config.postManageCancelDeliverySchedule, data: req, ...options }),
  getManageDeliveryScheduleDetail: (req, options = {}) => axios({ ...config.getManageDeliveryScheduleDetail, data: req, ...options }),
  getManageDetail: (req, options = {}) => axios({ ...config.getManageDetail, data: req, ...options }),
  postManageExpertScheduleAppointment: (req, options = {}) => axios({ ...config.postManageExpertScheduleAppointment, data: req, ...options }),
  getManageGetDeliveryScheduleList: (req, options = {}) => axios({ ...config.getManageGetDeliveryScheduleList, data: req, ...options }),
  postManageOperationServiceExpert: (req, options = {}) => axios({ ...config.postManageOperationServiceExpert, data: req, ...options }),
  getCommonClassifyList: (req, options = {}) => axios({ ...config.getCommonClassifyList, data: req, ...options }),
  getManageCustomerScheduleRecordPage: (req, options = {}) => axios({ ...config.getManageCustomerScheduleRecordPage, data: req, ...options }),
  postManageBatchCloseProject: (req, options = {}) => axios({ ...config.postManageBatchCloseProject, data: req, ...options }),
  postManageBatchStartProject: (req, options = {}) => axios({ ...config.postManageBatchStartProject, data: req, ...options }),
  postManageUpdateDeliverySchedule: (req, options = {}) => axios({ ...config.postManageUpdateDeliverySchedule, data: req, ...options }),
  postManageReplaceDeliverySchedule: (req, options = {}) => axios({ ...config.postManageReplaceDeliverySchedule, data: req, ...options }),
  postManageSaveDeliverySchedule: (req, options = {}) => axios({ ...config.postManageSaveDeliverySchedule, data: req, ...options }),
  postRecordPage: (req, options = {}) => axios({ ...config.postRecordPage, data: req, ...options }),
  postEditRemark: (req, options = {}) => axios({ ...config.postEditRemark, data: req, ...options }),
  postEditRole: (req, options = {}) => axios({ ...config.postEditRole, data: req, ...options }),
  postEditSchedule: (req, options = {}) => axios({ ...config.postEditSchedule, data: req, ...options }),
  getCustomerInfoQuery: (req, options = {}) => axios({ ...config.getCustomerInfoQuery, data: req, ...options }),
  postManageExpertPageList: (req, options = {}) => axios({ ...config.postManageExpertPageList, data: req, ...options }),
  getExpertScheduleManageGetDeliveryScheduleList: (req, options = {}) => axios({ ...config.getExpertScheduleManageGetDeliveryScheduleList, data: req, ...options }),
  getManageQueryProjectSimpleInfo: (req, options = {}) => axios({ ...config.getManageQueryProjectSimpleInfo, data: req, ...options }),
  getManageQueryPlanSimpleInfo: (req, options = {}) => axios({ ...config.getManageQueryPlanSimpleInfo, data: req, ...options }),
  postManageCustomerScheduleRecordPage: (req, options = {}) => axios({ ...config.postManageCustomerScheduleRecordPage, data: req, ...options }),
  postIsdChatAnalysisResultPage: (req, options = {}) => axios({ ...config.postIsdChatAnalysisResultPage, data: req, ...options }),
  getScheduleMsg: (req, options = {}) => axios({ ...config.getScheduleMsg, data: req, ...options }),
  postServiceSave: (req, options = {}) => axios({ ...config.postServiceSave, data: req, ...options }),
  getExceptionExceptionStatistic: (req, options = {}) => axios({ ...config.getExceptionExceptionStatistic, data: req, ...options }),
  postOlAgentAssistanceAnalyzeChat: (req, options = {}) => axios({ ...config.postOlAgentAssistanceAnalyzeChat, data: req, ...options }),
  getOlAgentAssistanceChatAnalyzeResultList: (req, options = {}) => axios({ ...config.getOlAgentAssistanceChatAnalyzeResultList, data: req, ...options }),
  postOlAgentAssistanceCacheAuoCoverFlag: (req, options = {}) => axios({ ...config.postOlAgentAssistanceCacheAuoCoverFlag, data: req, ...options }),
  postExpertCount: (req, options = {}) => axios({ ...config.postExpertCount, data: req, ...options }),
  postMarkDivide: (req, options = {}) => axios({ ...config.postMarkDivide, data: req, ...options }),
  postExpertScheduleManageUnScheduleBatchPreExpertSchedule: (req, options = {}) => axios({ ...config.postExpertScheduleManageUnScheduleBatchPreExpertSchedule, data: req, ...options }),
  postSearchCustomer: (req, options = {}) => axios({ ...config.postSearchCustomer, data: req, ...options }),
  postManageBatchNoDelivery: (req, options = {}) => axios({ ...config.postManageBatchNoDelivery, data: req, ...options }),
  postManageCancelNoDelivery: (req, options = {}) => axios({ ...config.postManageCancelNoDelivery, data: req, ...options }),
  postAnswerView: (req, options = {}) => axios({ ...config.postAnswerView, data: req, ...options }),
  postOlAgentAssistanceKnowledgeHistoryAnswerViewSave: (req, options = {}) => axios({ ...config.postOlAgentAssistanceKnowledgeHistoryAnswerViewSave, data: req, ...options }),
  getRecordList: (req, options = {}) => axios({ ...config.getRecordList, data: req, ...options }),
  getBusinessMsg: (req, options = {}) => axios({ ...config.getBusinessMsg, data: req, ...options }),
  postSearchExpert: (req, options = {}) => axios({ ...config.postSearchExpert, data: req, ...options }),
  getCommonQueryOptionsSort: (req, options = {}) => axios({ ...config.getCommonQueryOptionsSort, data: req, ...options }),
  getManageExecuteExpertScheduleStatusData: (req, options = {}) => axios({ ...config.getManageExecuteExpertScheduleStatusData, data: req, ...options }),
  postManageBatchCancelSchedule: (req, options = {}) => axios({ ...config.postManageBatchCancelSchedule, data: req, ...options }),
  postDraftScheduleRecordPage: (req, options = {}) => axios({ ...config.postDraftScheduleRecordPage, data: req, ...options }),
  postPapersScheduleRecordPage: (req, options = {}) => axios({ ...config.postPapersScheduleRecordPage, data: req, ...options }),
  postManageSaveExpertCustomerSchedule: (req, options = {}) => axios({ ...config.postManageSaveExpertCustomerSchedule, data: req, ...options }),
  getManageCheckExistSchedule: (req, options = {}) => axios({ ...config.getManageCheckExistSchedule, data: req, ...options }),
  getTaxCategoryCodeQueryTaxCategoryCode: (req, options = {}) => axios({ ...config.getTaxCategoryCodeQueryTaxCategoryCode, data: req, ...options }),
  postConsulttaskruletodoOnlineCreateTodo: (req, options = {}) => axios({ ...config.postConsulttaskruletodoOnlineCreateTodo, data: req, ...options }),
  postConsulttaskruletodoIncallCreateTodo: (req, options = {}) => axios({ ...config.postConsulttaskruletodoIncallCreateTodo, data: req, ...options }),
  postConsulttaskruletodoCallbackCreateTodo: (req, options = {}) => axios({ ...config.postConsulttaskruletodoCallbackCreateTodo, data: req, ...options }),
  postAutoList: (req, options = {}) => axios({ ...config.postAutoList, data: req, ...options }),
  postConsulttaskruletodoOutCreateTodo: (req, options = {}) => axios({ ...config.postConsulttaskruletodoOutCreateTodo, data: req, ...options }),
  postVoiceGetOlVoice2Text: (req, options = {}) => axios({ ...config.postVoiceGetOlVoice2Text, data: req, ...options }),
  getAgencySearchNonCloudAgency: (req, options = {}) => axios({ ...config.getAgencySearchNonCloudAgency, data: req, ...options }),
  postCompanyCheckTemporaryCompanyConfig: (req, options = {}) => axios({ ...config.postCompanyCheckTemporaryCompanyConfig, data: req, ...options }),
  getCustomerCenterSearchRegionCustomerByContent: (req, options = {}) => axios({ ...config.getCustomerCenterSearchRegionCustomerByContent, data: req, ...options }),
  getCommonQueryLocationCode: (req, options = {}) => axios({ ...config.getCommonQueryLocationCode, data: req, ...options }),
};
